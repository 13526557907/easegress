{
    "type": "Python",
    "config": {
        "plugin_name": "python.wait_new_tweet",
        "code": "aW1wb3J0IHN5cwppbXBvcnQgYmFzZTY0CmltcG9ydCBqc29uCmZyb20gcHByaW50IGltcG9ydCBwcHJpbnQKCmltcG9ydCB0d2VlcHkKZnJvbSB0d2VlcHkgaW1wb3J0IFN0cmVhbQpmcm9tIHR3ZWVweSBpbXBvcnQgT0F1dGhIYW5kbGVyCmZyb20gdHdlZXB5LnN0cmVhbWluZyBpbXBvcnQgU3RyZWFtTGlzdGVuZXIKCmNvbnN1bWVyX2tleT0nQ3h4QTM3ZkRYV2xPNG5UZjU3cXUzUW1JOCcKY29uc3VtZXJfc2VjcmV0PSdBRFczcTgyQU1QWjBjUkVVRkZzUUlRMnNQRm5DYUNuWlpZalhxZkRVY3JsSVRhVW9xQicKYWNjZXNzX3Rva2VuX2tleT0nODg4NDI2NjM0MjY4NzQ1NzI4LWVPNDVIbGZlaXVFVGJHYWk2Q3o5UGJIMUpoYVlzQnonCmFjY2Vzc190b2tlbl9zZWNyZXQ9J3RManRVU0VsZVNob2l1MFJQcktsTnVublhwNGlqSDN1Zm1mamIzbHlLb1pNZCcKCmF1dGggPSBPQXV0aEhhbmRsZXIoY29uc3VtZXJfa2V5LCBjb25zdW1lcl9zZWNyZXQpCmF1dGguc2V0X2FjY2Vzc190b2tlbihhY2Nlc3NfdG9rZW5fa2V5LCBhY2Nlc3NfdG9rZW5fc2VjcmV0KQoKYXBpID0gdHdlZXB5LkFQSShhdXRoKQoKCmNsYXNzIE15TGlzdGVuZXIoU3RyZWFtTGlzdGVuZXIpOgogICAgZGVmIG9uX3N0YXR1cyhzZWxmLCBzdGF0dXMpOgogICAgICAgIHNlbmRfb3V0X3N0YXR1cyhzdGF0dXMpCgogICAgZGVmIG9uX2Vycm9yKHNlbGYsIHN0YXR1c19jb2RlKToKICAgICAgICByZXR1cm4gVHJ1ZQoKCnN0b3JlX3BhdGggPSAnLi8udHdlZXRfc2luY2VfaWQnCmRlZiBnZXRfc2luY2VfaWQodXNlcl9pZCk6CiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKHN0b3JlX3BhdGgpIGFzIGY6CiAgICAgICAgICAgIHVzZXJfc2luY2VfaWRzID0ganNvbi5sb2FkcyhmLnJlYWQoKSkKICAgICAgICAgICAgcmV0dXJuIHVzZXJfc2luY2VfaWRzLmdldCh1c2VyX2lkKQogICAgZXhjZXB0OgogICAgICAgIHJldHVybiBOb25lCgpkZWYgc2V0X3NpbmNlX2lkKHVzZXJfaWQsIHNpbmNlX2lkKToKICAgIHdpdGggb3BlbihzdG9yZV9wYXRoLCAndycpIGFzIGY6CiAgICAgICAgdHJ5OgogICAgICAgICAgICB1c2VyX3NpbmNlX2lkcyA9IGpzb24ubG9hZHMoZi5yZWFkKCkpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICB1c2VyX3NpbmNlX2lkcyA9IHt9CiAgICAgICAgdXNlcl9zaW5jZV9pZHNbdXNlcl9pZF0gPSBzaW5jZV9pZAogICAgICAgIGYud3JpdGUoanNvbi5kdW1wcyh1c2VyX3NpbmNlX2lkcykpCgoKZGVmIHdhaXRfbmV3X3R3ZWV0KHVzZXJfaWRzKToKICAgIHN0cmVhbSA9IFN0cmVhbShhdXRoLCBNeUxpc3RlbmVyKCkpCiAgICBzdHJlYW0uZmlsdGVyKGZvbGxvdz11c2VyX2lkcykKCgpkZWYgZ2V0X2V4aXN0ZWRfdHdlZXQodXNlcl9zaW5jZV9pZHMpOgogICAgZm9yIHVzZXJfaWQsIHNpbmNlX2lkIGluIHVzZXJfc2luY2VfaWRzLml0ZW1zKCk6CiAgICAgICAgc3RhdHVzZXMgPSBhcGkudXNlcl90aW1lbGluZSh1c2VyX2lkPXVzZXJfaWQsIHNpbmNlX2lkPXNpbmNlX2lkKQogICAgICAgIGlmIHN0YXR1c2VzIGlzIE5vbmUgb3IgbGVuKHN0YXR1c2VzKSA9PSAwOgogICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAjIE5PVElDRTogSGVyZSBpdCBkb2Vzbid0IHRyeSB0byBmaW5kIHRoZSBleGFjdGx5IG5lYXJlc3Qgc2luY2VfaWQgc3RhdHVzLgogICAgICAgIHJldHVybiBzdGF0dXNlc1stMV0KCiAgICByZXR1cm4gTm9uZQoKCmRlZiBzZW5kX291dF9zdGF0dXMoc3RhdHVzKToKICAgIGQgPSB7J3RleHQnOiAnJywgJ2ltYWdlX3VybCc6ICcnfQogICAgaWYgaGFzYXR0cihzdGF0dXMsICd0ZXh0Jyk6CiAgICAgICAgZFsndGV4dCddID0gc3RhdHVzLnRleHQKCiAgICBpZiBoYXNhdHRyKHN0YXR1cywgJ2VudGl0aWVzJyk6CiAgICAgICAgZW50aXRpZXMgPSBzdGF0dXMuZW50aXRpZXMKICAgICAgICBpZiBlbnRpdGllcyBpcyBub3QgTm9uZToKICAgICAgICAgICAgbWVkaWEgPSBlbnRpdGllcy5nZXQoJ21lZGlhJykKICAgICAgICAgICAgaWYgbWVkaWEgaXMgbm90IE5vbmUgYW5kIGxlbihtZWRpYSkgPiAwOgogICAgICAgICAgICAgICAgaW1hZ2VfdXJsID0gbWVkaWFbMF0uZ2V0KCdtZWRpYV91cmxfaHR0cHMnKQogICAgICAgICAgICAgICAgaWYgaW1hZ2VfdXJsIGlzIG5vdCBOb25lOgogICAgICAgICAgICAgICAgICAgIGRbJ2ltYWdlX3VybCddID0gaW1hZ2VfdXJsCgogICAgcHJpbnQoanNvbi5kdW1wcyhkKSkKICAgIHNldF9zaW5jZV9pZChzdGF0dXMudXNlci5pZF9zdHIsIHN0YXR1cy5pZCkKICAgIHN5cy5leGl0KDApCgoKZGVmIHF1aWNrX3Rlc3QoKToKICAgIG1lZ2FfZWFzZSA9IGFwaS5nZXRfdXNlcihzY3JlZW5fbmFtZT0nbWVnYV9lYXNlJykKICAgIHVzZXJfc2luY2VfaWRzID0gewogICAgICAgICAgICBtZWdhX2Vhc2UuaWRfc3RyOiA4OTc4NDM5MTc4OTAwNDM5MDQKICAgIH0KICAgIHN0YXR1cyA9IGdldF9leGlzdGVkX3R3ZWV0KHVzZXJfc2luY2VfaWRzKQogICAgc2VuZF9vdXRfc3RhdHVzKHN0YXR1cykKCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6CiAgICB0cnk6CiAgICAgICAgbWVnYV9lYXNlID0gYXBpLmdldF91c2VyKHNjcmVlbl9uYW1lPSdtZWdhX2Vhc2UnKQogICAgICAgIGhpenRvcnlfcGhvdG9zID0gYXBpLmdldF91c2VyKHNjcmVlbl9uYW1lPSdIaXp0b3J5UGhvdG9zJykKICAgICAgICB1c2VycyA9IFttZWdhX2Vhc2UsIGhpenRvcnlfcGhvdG9zXQoKICAgICAgICB1c2VyX3NpbmNlX2lkcyA9IHt9CiAgICAgICAgdXNlcl9pZHMgPSBbXQogICAgICAgIGZvciB1c2VyIGluIHVzZXJzOgogICAgICAgICAgICB1c2VyX2lkcy5hcHBlbmQodXNlci5pZF9zdHIpCiAgICAgICAgICAgIHNpbmNlX2lkID0gZ2V0X3NpbmNlX2lkKHVzZXIuaWRfc3RyKQogICAgICAgICAgICBpZiBzaW5jZV9pZCBpcyBub3QgTm9uZToKICAgICAgICAgICAgICAgIHVzZXJfc2luY2VfaWRzW3VzZXIuaWRfc3RyXSA9IHNpbmNlX2lkCgogICAgICAgIGlmIGxlbih1c2VyX3NpbmNlX2lkcykgPT0gMDoKICAgICAgICAgICAgd2FpdF9uZXdfdHdlZXQodXNlcl9pZHMpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgc3RhdHVzID0gZ2V0X2V4aXN0ZWRfdHdlZXQodXNlcl9zaW5jZV9pZHMpCiAgICAgICAgICAgIGlmIHN0YXR1cyA9PSBOb25lOgogICAgICAgICAgICAgICAgd2FpdF9uZXdfdHdlZXQodXNlcl9pZHMpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICBzZW5kX291dF9zdGF0dXMoc3RhdHVzKQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgIGVycl9tc2cgPSAncHl0aG9uIHNjcmlwdCBoYW5kbGVzIHR3ZWV0IGlucHV0IGZhaWxlZDoge30nLmZvcm1hdChlKQogICAgICAgIHByaW50KGVycl9tc2csIGZpbGU9c3lzLnN0ZGVycikKICAgICAgICBzeXMuZXhpdCgxKQ==",
        "base64_encoded": true,
        "version": "3",
        "timeout_sec": 0,
        "output_key": "TWEET"
    }
}
