{
    "type": "Python",
    "config": {
        "plugin_name": "python.wait_new_tweet",
        "code": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwojIC0qLSBlbmNvZGluZzogdXRmLTggLSotCgonJycKRGVzY3JpcHRpb246CiAgICBUaGlzIHNjcmlwdCBhaW1zIHRvIGNyYXdsIGEgdHdlZXQgYW5kIHJldHJpZXZlIHB1cmUgdGV4dCBhbmQgaW1hZ2UgZnJvbSBpdC4KICAgIFRoZSBjdXJycmVudCBoYXJkIGNvZGUgc2NyZWVuX25hbWUgYXJlIG1lZ2FfZWFzZSBhbmQgSGl6dG9yeVBob3Rvcy4KICAgIGh0dHBzOi8vdHdpdHRlci5jb20vbWVnYV9lYXNlLgogICAgaHR0cHM6Ly90d2l0dGVyLmNvbS9IaXp0b3J5UGhvdG9zCgpJbnB1dDogTm9uZQpPdXRwdXQ6IHN0ciBpbiBqc29uIGZvcm1hdDoKICAgIHsKICAgICAgICAidGV4dCI6ICJ0d2VldCB0ZXh0IHdoaWNoIGNvdWxkIGJlIGVtcHR5IiwKICAgICAgICAiaW1hZ2VfdXJsIjogInR3ZWV0IGltYWdlIHVybCIsCiAgICAgICAgInVzZXJfbmFtZSI6ICJ0aGVfdHdlZXRfdXNlcl9uYW1lIiwKICAgICAgICAiY3JlYXRlZF9hdCI6ICJGcmkgQXVnIDI1IDE2OjE3OjM1IDIwMTciCiAgICB9CicnJwoKaW1wb3J0IHN5cwppbXBvcnQgYmFzZTY0CmltcG9ydCBqc29uCmZyb20gcHByaW50IGltcG9ydCBwcHJpbnQKCmltcG9ydCB0d2VlcHkKZnJvbSB0d2VlcHkgaW1wb3J0IFN0cmVhbQpmcm9tIHR3ZWVweSBpbXBvcnQgT0F1dGhIYW5kbGVyCmZyb20gdHdlZXB5LnN0cmVhbWluZyBpbXBvcnQgU3RyZWFtTGlzdGVuZXIKCmNvbnN1bWVyX2tleT0nQ3h4QTM3ZkRYV2xPNG5UZjU3cXUzUW1JOCcKY29uc3VtZXJfc2VjcmV0PSdBRFczcTgyQU1QWjBjUkVVRkZzUUlRMnNQRm5DYUNuWlpZalhxZkRVY3JsSVRhVW9xQicKYWNjZXNzX3Rva2VuX2tleT0nODg4NDI2NjM0MjY4NzQ1NzI4LWVPNDVIbGZlaXVFVGJHYWk2Q3o5UGJIMUpoYVlzQnonCmFjY2Vzc190b2tlbl9zZWNyZXQ9J3RManRVU0VsZVNob2l1MFJQcktsTnVublhwNGlqSDN1Zm1mamIzbHlLb1pNZCcKCmF1dGggPSBPQXV0aEhhbmRsZXIoY29uc3VtZXJfa2V5LCBjb25zdW1lcl9zZWNyZXQpCmF1dGguc2V0X2FjY2Vzc190b2tlbihhY2Nlc3NfdG9rZW5fa2V5LCBhY2Nlc3NfdG9rZW5fc2VjcmV0KQoKYXBpID0gdHdlZXB5LkFQSShhdXRoKQoKCmNsYXNzIE15TGlzdGVuZXIoU3RyZWFtTGlzdGVuZXIpOgogICAgZGVmIG9uX3N0YXR1cyhzZWxmLCBzdGF0dXMpOgogICAgICAgIHNlbmRfb3V0X3N0YXR1cyhzdGF0dXMpCgogICAgZGVmIG9uX2Vycm9yKHNlbGYsIHN0YXR1c19jb2RlKToKICAgICAgICByZXR1cm4gVHJ1ZQoKCnN0b3JlX3BhdGggPSAnLi8udHdlZXRfc2luY2VfaWQnCmRlZiBnZXRfc2luY2VfaWQodXNlcl9pZCk6CiAgICB0cnk6CiAgICAgICAgd2l0aCBvcGVuKHN0b3JlX3BhdGgpIGFzIGY6CiAgICAgICAgICAgIHVzZXJfc2luY2VfaWRzID0ganNvbi5sb2FkcyhmLnJlYWQoKSkKICAgICAgICAgICAgcmV0dXJuIHVzZXJfc2luY2VfaWRzLmdldCh1c2VyX2lkKQogICAgZXhjZXB0OgogICAgICAgIHJldHVybiBOb25lCgpkZWYgc2V0X3NpbmNlX2lkKHVzZXJfaWQsIHNpbmNlX2lkKToKICAgIHdpdGggb3BlbihzdG9yZV9wYXRoLCAndycpIGFzIGY6CiAgICAgICAgdHJ5OgogICAgICAgICAgICB1c2VyX3NpbmNlX2lkcyA9IGpzb24ubG9hZHMoZi5yZWFkKCkpCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICB1c2VyX3NpbmNlX2lkcyA9IHt9CiAgICAgICAgdXNlcl9zaW5jZV9pZHNbdXNlcl9pZF0gPSBzaW5jZV9pZAogICAgICAgIGYud3JpdGUoanNvbi5kdW1wcyh1c2VyX3NpbmNlX2lkcykpCgoKZGVmIHdhaXRfbmV3X3R3ZWV0KHVzZXJfaWRzKToKICAgIHN0cmVhbSA9IFN0cmVhbShhdXRoLCBNeUxpc3RlbmVyKCkpCiAgICBzdHJlYW0uZmlsdGVyKGZvbGxvdz11c2VyX2lkcykKCgpkZWYgZ2V0X2V4aXN0ZWRfdHdlZXQodXNlcl9zaW5jZV9pZHMpOgogICAgZm9yIHVzZXJfaWQsIHNpbmNlX2lkIGluIHVzZXJfc2luY2VfaWRzLml0ZW1zKCk6CiAgICAgICAgc3RhdHVzZXMgPSBhcGkudXNlcl90aW1lbGluZSh1c2VyX2lkPXVzZXJfaWQsIHNpbmNlX2lkPXNpbmNlX2lkKQogICAgICAgIGlmIHN0YXR1c2VzIGlzIE5vbmUgb3IgbGVuKHN0YXR1c2VzKSA9PSAwOgogICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAjIE5PVElDRTogSGVyZSBpdCBkb2Vzbid0IHRyeSB0byBmaW5kIHRoZSBleGFjdGx5IG5lYXJlc3Qgc2luY2VfaWQgc3RhdHVzLgogICAgICAgIHJldHVybiBzdGF0dXNlc1stMV0KCiAgICByZXR1cm4gTm9uZQoKCmRlZiBzZW5kX291dF9zdGF0dXMoc3RhdHVzKToKICAgIGQgPSB7CiAgICAgICAgICAgICd0ZXh0JzogJycsCiAgICAgICAgICAgICdpbWFnZV91cmwnOiAnJywKICAgICAgICAgICAgJ3VzZXJfbmFtZSc6ICcnLAogICAgICAgICAgICAnY3JlYXRlZF9hdCc6ICcnLAogICAgfQoKICAgIGlmIGhhc2F0dHIoc3RhdHVzLCAndGV4dCcpOgogICAgICAgIGRbJ3RleHQnXSA9IHN0YXR1cy50ZXh0CgogICAgaWYgaGFzYXR0cihzdGF0dXMsICdlbnRpdGllcycpOgogICAgICAgIGVudGl0aWVzID0gc3RhdHVzLmVudGl0aWVzCiAgICAgICAgaWYgZW50aXRpZXMgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIG1lZGlhID0gZW50aXRpZXMuZ2V0KCdtZWRpYScpCiAgICAgICAgICAgIGlmIG1lZGlhIGlzIG5vdCBOb25lIGFuZCBsZW4obWVkaWEpID4gMDoKICAgICAgICAgICAgICAgIGltYWdlX3VybCA9IG1lZGlhWzBdLmdldCgnbWVkaWFfdXJsX2h0dHBzJykKICAgICAgICAgICAgICAgIGlmIGltYWdlX3VybCBpcyBub3QgTm9uZToKICAgICAgICAgICAgICAgICAgICBkWydpbWFnZV91cmwnXSA9IGltYWdlX3VybAoKICAgIGlmIGhhc2F0dHIoc3RhdHVzLCAndXNlcicpOgogICAgICAgIHVzZXIgPSBzdGF0dXMudXNlcgogICAgICAgIGlmIGhhc2F0dHIodXNlciwgJ25hbWUnKToKICAgICAgICAgICAgZFsndXNlcl9uYW1lJ10gPSB1c2VyLm5hbWUKCiAgICBpZiBoYXNhdHRyKHN0YXR1cywgJ2NyZWF0ZWRfYXQnKToKICAgICAgICBkWydjcmVhdGVkX2F0J10gPSBzdGF0dXMuY3JlYXRlZF9hdC5zdHJmdGltZSgnJWMnKQoKCiAgICBwcmludChqc29uLmR1bXBzKGQpKQogICAgc2V0X3NpbmNlX2lkKHN0YXR1cy51c2VyLmlkX3N0ciwgc3RhdHVzLmlkKQogICAgc3lzLmV4aXQoMCkKCgpkZWYgcXVpY2tfdGVzdCgpOgogICAgbWVnYV9lYXNlID0gYXBpLmdldF91c2VyKHNjcmVlbl9uYW1lPSdtZWdhX2Vhc2UnKQogICAgdXNlcl9zaW5jZV9pZHMgPSB7CiAgICAgICAgICAgIG1lZ2FfZWFzZS5pZF9zdHI6IDg5Nzg0MzkxNzg5MDA0MzkwNAogICAgfQogICAgc3RhdHVzID0gZ2V0X2V4aXN0ZWRfdHdlZXQodXNlcl9zaW5jZV9pZHMpCiAgICBzZW5kX291dF9zdGF0dXMoc3RhdHVzKQoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKICAgIHRyeToKICAgICAgICBtZWdhX2Vhc2UgPSBhcGkuZ2V0X3VzZXIoc2NyZWVuX25hbWU9J21lZ2FfZWFzZScpCiAgICAgICAgaGl6dG9yeV9waG90b3MgPSBhcGkuZ2V0X3VzZXIoc2NyZWVuX25hbWU9J0hpenRvcnlQaG90b3MnKQogICAgICAgIHVzZXJzID0gW21lZ2FfZWFzZSwgaGl6dG9yeV9waG90b3NdCgogICAgICAgIHVzZXJfc2luY2VfaWRzID0ge30KICAgICAgICB1c2VyX2lkcyA9IFtdCiAgICAgICAgZm9yIHVzZXIgaW4gdXNlcnM6CiAgICAgICAgICAgIHVzZXJfaWRzLmFwcGVuZCh1c2VyLmlkX3N0cikKICAgICAgICAgICAgc2luY2VfaWQgPSBnZXRfc2luY2VfaWQodXNlci5pZF9zdHIpCiAgICAgICAgICAgIGlmIHNpbmNlX2lkIGlzIG5vdCBOb25lOgogICAgICAgICAgICAgICAgdXNlcl9zaW5jZV9pZHNbdXNlci5pZF9zdHJdID0gc2luY2VfaWQKCiAgICAgICAgaWYgbGVuKHVzZXJfc2luY2VfaWRzKSA9PSAwOgogICAgICAgICAgICB3YWl0X25ld190d2VldCh1c2VyX2lkcykKICAgICAgICBlbHNlOgogICAgICAgICAgICBzdGF0dXMgPSBnZXRfZXhpc3RlZF90d2VldCh1c2VyX3NpbmNlX2lkcykKICAgICAgICAgICAgaWYgc3RhdHVzID09IE5vbmU6CiAgICAgICAgICAgICAgICB3YWl0X25ld190d2VldCh1c2VyX2lkcykKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHNlbmRfb3V0X3N0YXR1cyhzdGF0dXMpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgZXJyX21zZyA9ICdweXRob24gc2NyaXB0IGhhbmRsZXMgdHdlZXQgaW5wdXQgZmFpbGVkOiB7fScuZm9ybWF0KGUpCiAgICAgICAgcHJpbnQoZXJyX21zZywgZmlsZT1zeXMuc3RkZXJyKQogICAgICAgIHN5cy5leGl0KDEpCg==",
        "base64_encoded": true,
        "version": "3",
        "timeout_sec": 0,
        "output_key": "TWEET"
    }
}
