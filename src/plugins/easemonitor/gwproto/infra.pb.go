// Code generated by protoc-gen-go.
// source: infra.proto
// DO NOT EDIT!

package gwproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Infra_Platform int32

const (
	Infra_UNKNOWN Infra_Platform = 0
	Infra_ANDROID Infra_Platform = 1
	Infra_IOS     Infra_Platform = 2
)

var Infra_Platform_name = map[int32]string{
	0: "UNKNOWN",
	1: "ANDROID",
	2: "IOS",
}
var Infra_Platform_value = map[string]int32{
	"UNKNOWN": 0,
	"ANDROID": 1,
	"IOS":     2,
}

func (x Infra_Platform) String() string {
	return proto.EnumName(Infra_Platform_name, int32(x))
}
func (Infra_Platform) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

type Infra struct {
	Isp        string         `protobuf:"bytes,1,opt,name=isp" json:"isp,omitempty"`
	Brand      string         `protobuf:"bytes,2,opt,name=brand" json:"brand,omitempty"`
	Os         string         `protobuf:"bytes,3,opt,name=os" json:"os,omitempty"`
	Resolution string         `protobuf:"bytes,4,opt,name=resolution" json:"resolution,omitempty"`
	Platform   Infra_Platform `protobuf:"varint,5,opt,name=platform,enum=Infra_Platform" json:"platform,omitempty"`
	Rooted     bool           `protobuf:"varint,6,opt,name=rooted" json:"rooted,omitempty"`
	Device     string         `protobuf:"bytes,7,opt,name=device" json:"device,omitempty"`
	Model      string         `protobuf:"bytes,8,opt,name=model" json:"model,omitempty"`
	Kernal     string         `protobuf:"bytes,9,opt,name=kernal" json:"kernal,omitempty"`
}

func (m *Infra) Reset()                    { *m = Infra{} }
func (m *Infra) String() string            { return proto.CompactTextString(m) }
func (*Infra) ProtoMessage()               {}
func (*Infra) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Infra) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func (m *Infra) GetBrand() string {
	if m != nil {
		return m.Brand
	}
	return ""
}

func (m *Infra) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Infra) GetResolution() string {
	if m != nil {
		return m.Resolution
	}
	return ""
}

func (m *Infra) GetPlatform() Infra_Platform {
	if m != nil {
		return m.Platform
	}
	return Infra_UNKNOWN
}

func (m *Infra) GetRooted() bool {
	if m != nil {
		return m.Rooted
	}
	return false
}

func (m *Infra) GetDevice() string {
	if m != nil {
		return m.Device
	}
	return ""
}

func (m *Infra) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Infra) GetKernal() string {
	if m != nil {
		return m.Kernal
	}
	return ""
}

func init() {
	proto.RegisterType((*Infra)(nil), "Infra")
	proto.RegisterEnum("Infra_Platform", Infra_Platform_name, Infra_Platform_value)
}

func init() { proto.RegisterFile("infra.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x4d, 0x4a, 0xc4, 0x40,
	0x10, 0x85, 0xed, 0x8e, 0xf9, 0x99, 0x1a, 0x18, 0x43, 0x21, 0x52, 0x2b, 0x09, 0xb3, 0x0a, 0x88,
	0x59, 0xe8, 0x09, 0x84, 0xd9, 0x04, 0x21, 0x91, 0x88, 0xb8, 0xce, 0x98, 0x1e, 0x08, 0x26, 0xa9,
	0xd0, 0x69, 0xbd, 0x8b, 0xb7, 0x95, 0xee, 0x8e, 0x32, 0xbb, 0xfa, 0x3e, 0x1e, 0xbc, 0x47, 0xc1,
	0xb6, 0x9f, 0x4e, 0xba, 0x2d, 0x66, 0xcd, 0x86, 0xf7, 0x3f, 0x12, 0xc2, 0xd2, 0x32, 0xa6, 0x10,
	0xf4, 0xcb, 0x4c, 0x22, 0x13, 0xf9, 0xa6, 0xb1, 0x27, 0x5e, 0x43, 0x78, 0xd4, 0xed, 0xd4, 0x91,
	0x74, 0xce, 0x03, 0xee, 0x40, 0xf2, 0x42, 0x81, 0x53, 0x92, 0x17, 0xbc, 0x05, 0xd0, 0x6a, 0xe1,
	0xe1, 0xcb, 0xf4, 0x3c, 0xd1, 0xa5, 0xf3, 0x67, 0x06, 0xef, 0x20, 0x99, 0x87, 0xd6, 0x9c, 0x58,
	0x8f, 0x14, 0x66, 0x22, 0xdf, 0x3d, 0x5c, 0x15, 0xae, 0xb1, 0x78, 0x59, 0x75, 0xf3, 0x1f, 0xc0,
	0x1b, 0x88, 0x34, 0xb3, 0x51, 0x1d, 0x45, 0x99, 0xc8, 0x93, 0x66, 0x25, 0xeb, 0x3b, 0xf5, 0xdd,
	0x7f, 0x28, 0x8a, 0x5d, 0xc1, 0x4a, 0x76, 0xe2, 0xc8, 0x9d, 0x1a, 0x28, 0xf1, 0x13, 0x1d, 0xd8,
	0xf4, 0xa7, 0xd2, 0x53, 0x3b, 0xd0, 0xc6, 0xa7, 0x3d, 0xed, 0xef, 0x21, 0xf9, 0xeb, 0xc4, 0x2d,
	0xc4, 0x6f, 0xd5, 0x73, 0x55, 0xbf, 0x57, 0xe9, 0x85, 0x85, 0xa7, 0xea, 0xd0, 0xd4, 0xe5, 0x21,
	0x15, 0x18, 0x43, 0x50, 0xd6, 0xaf, 0xa9, 0x3c, 0x46, 0xee, 0x45, 0x8f, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x64, 0xc1, 0xcd, 0xb7, 0x31, 0x01, 0x00, 0x00,
}
