// Code generated by protoc-gen-go.
// source: apm_data.proto
// DO NOT EDIT!

/*
Package gwproto is a generated protocol buffer package.

It is generated from these files:
	apm_data.proto
	app.proto
	complete.proto
	http_request.proto
	infra.proto
	net_err.proto

It has these top-level messages:
	ApmData
	App
	Complete
	HttpRequest
	Infra
	NetErr
*/
package gwproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ApmData struct {
	Version  string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Infra    *Infra `protobuf:"bytes,2,opt,name=infra" json:"infra,omitempty"`
	App      *App   `protobuf:"bytes,3,opt,name=app" json:"app,omitempty"`
	ClientIp string `protobuf:"bytes,4,opt,name=client_ip,json=clientIp" json:"client_ip,omitempty"`
	// Types that are valid to be assigned to Metrics:
	//	*ApmData_HttpReq
	Metrics isApmData_Metrics `protobuf_oneof:"metrics"`
}

func (m *ApmData) Reset()                    { *m = ApmData{} }
func (m *ApmData) String() string            { return proto.CompactTextString(m) }
func (*ApmData) ProtoMessage()               {}
func (*ApmData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isApmData_Metrics interface {
	isApmData_Metrics()
}

type ApmData_HttpReq struct {
	HttpReq *HttpRequest `protobuf:"bytes,5,opt,name=http_req,json=httpReq,oneof"`
}

func (*ApmData_HttpReq) isApmData_Metrics() {}

func (m *ApmData) GetMetrics() isApmData_Metrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func (m *ApmData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ApmData) GetInfra() *Infra {
	if m != nil {
		return m.Infra
	}
	return nil
}

func (m *ApmData) GetApp() *App {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *ApmData) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *ApmData) GetHttpReq() *HttpRequest {
	if x, ok := m.GetMetrics().(*ApmData_HttpReq); ok {
		return x.HttpReq
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ApmData) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ApmData_OneofMarshaler, _ApmData_OneofUnmarshaler, _ApmData_OneofSizer, []interface{}{
		(*ApmData_HttpReq)(nil),
	}
}

func _ApmData_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ApmData)
	// metrics
	switch x := m.Metrics.(type) {
	case *ApmData_HttpReq:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.HttpReq); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ApmData.Metrics has unexpected type %T", x)
	}
	return nil
}

func _ApmData_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ApmData)
	switch tag {
	case 5: // metrics.http_req
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HttpRequest)
		err := b.DecodeMessage(msg)
		m.Metrics = &ApmData_HttpReq{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ApmData_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ApmData)
	// metrics
	switch x := m.Metrics.(type) {
	case *ApmData_HttpReq:
		s := proto.Size(x.HttpReq)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ApmData)(nil), "ApmData")
}

func init() { proto.RegisterFile("apm_data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x8e, 0xbd, 0x4e, 0x80, 0x30,
	0x14, 0x46, 0xad, 0xfc, 0x94, 0x5e, 0x8c, 0x43, 0x07, 0xd3, 0xa8, 0x03, 0x71, 0xc2, 0xa5, 0x83,
	0x3e, 0x01, 0xc6, 0x01, 0xd6, 0xbe, 0x00, 0xa9, 0x58, 0x43, 0x13, 0x81, 0x6b, 0xb9, 0xfa, 0x54,
	0x3e, 0xa4, 0xa1, 0x95, 0xad, 0xe7, 0x34, 0xf7, 0xcb, 0x81, 0x6b, 0x8b, 0xcb, 0xf8, 0x6e, 0xc9,
	0x6a, 0x0c, 0x1b, 0x6d, 0xb7, 0xb5, 0x5f, 0x3f, 0xc2, 0x09, 0xc2, 0x22, 0xfe, 0x3f, 0xe5, 0x4c,
	0x84, 0x63, 0x70, 0x5f, 0xdf, 0x6e, 0xa7, 0xe4, 0x1e, 0x7e, 0x19, 0xf0, 0x0e, 0x97, 0x57, 0x4b,
	0x56, 0x2a, 0xe0, 0x3f, 0x2e, 0xec, 0x7e, 0x5b, 0x15, 0x6b, 0x58, 0x2b, 0xcc, 0x89, 0xf2, 0x1e,
	0x8a, 0xb8, 0xa9, 0x2e, 0x1b, 0xd6, 0xd6, 0x4f, 0xa5, 0x1e, 0x0e, 0x32, 0x49, 0xca, 0x1b, 0xc8,
	0x2c, 0xa2, 0xca, 0xe2, 0x5f, 0xae, 0x3b, 0x44, 0x73, 0x08, 0x79, 0x07, 0x62, 0xfa, 0xf4, 0x6e,
	0xa5, 0xd1, 0xa3, 0xca, 0xe3, 0x62, 0x95, 0xc4, 0x80, 0xf2, 0x11, 0xaa, 0x33, 0x47, 0x15, 0xf1,
	0xf2, 0x4a, 0xf7, 0x44, 0x68, 0x52, 0x5e, 0x7f, 0x61, 0xf8, 0x9c, 0xf0, 0x45, 0x00, 0x5f, 0x1c,
	0x05, 0x3f, 0xed, 0x6f, 0x65, 0xac, 0x7e, 0xfe, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x0f, 0x9d, 0x78,
	0x6e, 0xf3, 0x00, 0x00, 0x00,
}
