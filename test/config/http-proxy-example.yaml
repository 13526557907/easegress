name: http-proxy-example
kind: HTTPProxy
# By order: validator, fallback, rateLimiter, requestAdaptor, backend, responseAdaptor
validator:
  headers:
    Content-Type:
      values:
      - application/json
      regexp: ""
    User-Agent:
      values: []
      regexp: .+
    X-Filter:
      values:
      - ""
      - mirror
      - candidate
      regexp: ""
# fallback:
#   mockCode: 200
#   mockHeaders:
#     Content-Type: applicaion/json
#     X-Fallback: Okay
#   mockBody: '{"message": "The feature turned off, please try it later."}'
rateLimiter:
  maxConcurrent: 10
  tps: 20000
  timeout: 50ms
  fallback:
    mockCode: 200
    mockHeaders:
    mockBody: '{"message": "Traffic jam, please try it later."}'
urlRateLimiter:
  # fallback:
  #   mockCode: 201
  #   mockHeaders:
  #   mockBody: '{"message": "Single service can not take the pressure."}'
  paths:
  - path: /proxy/activity/1
    pathPrefix:
    pathRegexp:
    headers:
      X-User-Id:
        values:
        regexp: \d+
    tps: 80
    timeout: 1s
  - pathPrefix: /proxy/activity/2
    tps: 30
    timeout: 100ms
requestAdaptor:
  method: ""
  path: null
  header:
    del: []
    set:
      X-Adapt-Key: goodplan
    add: {}
backend:
  failureCodes: [500, 501]
  fallback:
    forCodes: true
    forCircuitBreaker: true
    mockCode: 200
    mockHeader: {X-Fallback: yes}
    mockBody: '{"message": "Backend failed, try it later."}'
  mirrorPool:
    servers:
    - url: http://127.0.0.1:9091
    - url: http://127.0.0.1:9092
    loadBalance:
      policy: roundRobin
      headerHashKey: ""
    filter:
      headers:
        X-Filter:
          values:
          - mirror
          regexp: ""
  candidatePool:
    circuitBreaker:
      countPeriod: 10s
      toClosedConsecutiveCounts: 7
      toHalfOpenTimeout: 10s
      toOpenFailureCounts: 10
      toOpenFailureConsecutiveCounts: 4
    servers:
    - url: http://127.0.0.1:9093
    - url: http://127.0.0.1:9094
    loadBalance:
      policy: random
      headerHashKey: ""
    memoryCache: null
    filter:
      headers:
        X-Filter:
          values:
          - candidate
          regexp: ""
  mainPool:
    circuitBreaker:
      countPeriod: 10s
      toClosedConsecutiveCounts: 7
      toHalfOpenTimeout: 10s
      toOpenFailureCounts: 10
      toOpenFailureConsecutiveCounts: 4
    serviceName: service-001
    serviceRegistry: eureka-service-registry-example
    serversTags: ["v2"]
    servers:
    - url: http://127.0.0.1:9095
      tags: ["blue", "v2"]
    - url: http://127.0.0.1:9096
      tags: ["v2"]
    - url: http://127.0.0.1:9097
      tags: ["green", "v2"]
    - url: http://127.0.0.1:9098
      tags: ["green", "v2"]
    loadBalance:
      policy: roundRobin
      headerHashKey: X-User-Id
    # memoryCache:
    #   expiration: 10s
    #   maxEntryBytes: 4096
    #   size: 100
    #   codes:
    #   - 200
    #   - 201
    #   methods:
    #   - GET
    #   - HEAD
  compression:
    minLength: 1024
responseAdaptor:
  header:
    del: []
    set:
      Server: Easegress v3.0.0
    add:
      X-Proxy-Name: http-proxy-exmaple
